{"version":3,"sources":["logo.svg","Components/DateTimeInput.js","Components/TabNoDataFound.js","Components/ListCards.js","Components/Tabs.js","Components/SignInSide.js","App.js","serviceWorker.js","index.js","images/svg/icons8-family-100.svg"],"names":["module","exports","App","NoDataFound","props","Grid","item","xs","md","fontSize","color","style","fontWeight","tabType","charAt","toUpperCase","slice","useStyles","makeStyles","theme","card","maxWidth","marginBottom","alignItems","root","padding","borderRadius","margin","background","boxShadow","transition","cursor","lighten","palette","primary","main","title","lineHeight","subTitle","fontStyle","content","textAlign","flex","overflow","display","justifyContent","flexDirection","marginLeft","float","avtar","whenTime","cardActions","textStrike","textDecoration","ImgMediaCard","classes","tabTypeBasedData","todoSearchFor","state","allTodoData","filter","obj","todoType","data","filteredData","i","moment","txtWhen","format","isSame","push","isAfter","isBefore","returnDataBasedOnTodoSearchFor","getDataBasedOnRequestType","console","log","length","count","map","index","key","toString","className","drpdTodoType","returnIcon","src","FamilyIcon","width","height","Typography","gutterBottom","variant","component","txtWhatToDo","txtWhereToDo","IconButton","size","onClick","handleChangeTodoStatus","counterId","data-for","data-tip","handleRemoval","place","id","getContent","dataTip","clear","txtWhenDiffFormat","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","p","a11yProps","root_left_side","flexGrow","backgroundColor","paper","SimpleTabs","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","label","maxHeight","tabsPanel","handler","todo_time_comp_con","border","containerFirstChild","image","backgroundImage","backgroundRepeat","type","grey","backgroundSize","backgroundPosition","spacing","avatar","secondary","form","marginTop","submit","superContainer","AddTaskForm","name","placeholder","required","Component","AddTaskButton","openTodoForm","handleShowForm","Button","this","SignInSide","setState","handleChange","target","container","justify","Select","native","CssBaseline","sm","nodeId","el","Paper","elevation","square","Avatar","onSubmit","preventDefault","counter","isActive","todoStatus","FormControl","formControl","fullWidth","InputLabel","htmlFor","TextField","utils","DateFnsUtils","DateTimePicker","clearable","date","dateTime","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.970a0341.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nfunction App(props) {\n\n  \n  //const [selectedDate, handleDateChange] = useState(new Date(\"2018-01-01T00:00:00.000Z\"));\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n      <DateTimePicker\n          label=\"When?\"\n          clearable\n          value={props.txtWhen}\n          onChange={props.handleChange}\n          fullWidth\n          id = 'txtWhen'\n        />\n    </MuiPickersUtilsProvider>\n  );\n}\nexport default App;","import React from \"react\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nexport default function NoDataFound(props) {\n\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <center>\n                    <EventNoteIcon \n                    fontSize = \"large\"\n                    color=\"secondary\" \n                    style={{ fontSize: '50px' }}/>\n                    <div style = {{color : 'grey',fontWeight: 'bold'}}>No Task for {props.tabType.charAt(0).toUpperCase() + props.tabType.slice(1)}</div>\n                </center>\n            </Grid>\n        </>\n    );\n\n}","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport {lighten} from '@material-ui/core'\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\nimport FamilyIcon from '../images/svg/icons8-family-100.svg';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\",\n        alignItems: \"center\",\n    },\n    root: {\n        padding: \" 1rem 1.5rem\",\n        borderRadius: \"10px\",\n        margin: \"10px 0\",\n        // display: \"flex\",\n        alignItems: \"center\",\n        background: \"#fff\",\n        boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\",\n        transition : 'all 400ms ease',\n        '&:hover' : {\n            cursor : 'pointer',\n            transition : 'all 400ms ease',\n            background: `linear-gradient(\n                90deg,\n                ${lighten(theme.palette.primary.main, 0.5)} 0%,\n                #fff 80.96%\n              )`\n        }\n    },\n    title: {\n        fontSize: \"1rem\",\n        fontWeight: \"500\",\n        lineHeight: \"1.6\",\n        transition: \"all 900ms ease\",\n    },\n\n    subTitle: {\n        fontStyle: \"0.85rem\",\n        color: \"darken(30%)\",\n        transition: \"all 900ms ease\",\n    },\n    content : {\n        textAlign: \"left\",\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        marginLeft: \"15px\",\n        float : \"left\"\n      },\n     avtar : {\n         fontSize : \"50px\",\n         float : \"left\"\n        //  borderRadius : \"50%\"\n     }, \n     whenTime : {\n        // clear : \"both\",\n        fontSize : \"13px\",\n        textAlign: \"right\",\n     },\n     cardActions : {\n         float : \"right\",\n         //marginTop: \"10px\",\n     },\n     textStrike : {\n        textDecoration: \"line-through\"\n     }\n     \n}));\n\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n\n    function returnIcon(drpdTodoType) {\n\n        let returnIcon = <BusinessIcon className = {classes.avtar}/>;\n        if(drpdTodoType == \"work\") {\n            returnIcon = <WorkIcon className = {classes.avtar}/>;\n        } else if (drpdTodoType == \"family\") {\n            returnIcon = <img src={FamilyIcon} width={50} height={50} className = {classes.avtar}/>; \n        }  else if (drpdTodoType == \"personal\") {\n            returnIcon = <PermIdentityIcon className = {classes.avtar}/>;\n        }\n        return returnIcon;\n    }\n\n    \n\n    function returnDataBasedOnTodoSearchFor(todoSearchFor,tabTypeBasedData) {\n\n        var data = tabTypeBasedData;\n        var filteredData = [];\n        for (var i in data) {\n\n            if (todoSearchFor == \"today\") { \n\n                if(moment(moment(data[i].txtWhen).format(\"YYYY-MM-DD\")).isSame(moment().format(\"YYYY-MM-DD\"))) {\n                    filteredData.push(data[i]);\n                }\n\n            }  else if (todoSearchFor == \"upcoming\") { \n\n                if(moment(moment(data[i].txtWhen).format(\"YYYY-MM-DD\")).isAfter(moment().format(\"YYYY-MM-DD\"))) {\n                    filteredData.push(data[i]);\n                }\n\n            } else {\n\n                if(moment(moment(data[i].txtWhen).format(\"YYYY-MM-DD\")).isBefore(moment().format(\"YYYY-MM-DD\"))) {\n                    filteredData.push(data[i]);\n                }\n            }\n        }\n        return filteredData;\n    }\n\n    function getDataBasedOnRequestType(tabType, todoSearchFor) {\n\n        const dateFormat = \"DD/MM/YYYY\";\n        let tabTypeBasedData = (tabType == 'all') ? props.state.allTodoData : props.state.allTodoData.filter((obj) => obj.todoType === tabType);\n        //  if (todoSearchFor == \"today\") {\n        //      tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen).format(\"YYYY-MM-DD\")).isSame(moment().format(\"YYYY-MM-DD\")));\n        //  } else if (todoSearchFor == \"upcoming\") {\n        //      tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen).format(\"YYYY-MM-DD\")).isAfter(moment().format(\"YYYY-MM-DD\")));\n        //  } else {\n        //      tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen).format(\"YYYY-MM-DD\")).isBefore(moment().format(\"YYYY-MM-DD\")));\n        //  }\n        // tabTypeBasedData.map((item, index) => \n        //     console.log(moment(moment(item.txtWhen).format(\"YYYY-MM-DD\")).isBefore(moment().format(\"YYYY-MM-DD\")) + moment(item.txtWhen).format(\"YYYY-MM-DD\") + \"---\" +moment().format(\"YYYY-MM-DD\"))\n        // )\n        tabTypeBasedData = returnDataBasedOnTodoSearchFor(todoSearchFor,tabTypeBasedData);\n        //console.log(returnDataBasedOnTodoSearchFor(todoSearchFor));\n        //return false;\n         return tabTypeBasedData;\n    }\n\n   // console.log(getDataBasedOnRequestType(tabType, todoSearchFor));\n    const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor);\n\n     console.log(tabTypeBasedData);\n    // return false;\n    if (tabTypeBasedData.length > 0) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            //props.state.allTodoData.map((item, index) =>\n            tabTypeBasedData.map((item, index) =>\n                <Grid item xs={12} md={12} key={index.toString()}>\n                     <div className={classes.root}>\n                            \n                                {returnIcon(item.drpdTodoType)}\n\n                                <div className= {classes.content}>\n                                    <Typography  gutterBottom variant=\"h5\" component=\"h2\" style={{textDecoration: item.todoType !== 'active' ? 'line-through' : 'none'}}>\n                                        {item.txtWhatToDo} \n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {item.txtWhereToDo}\n                                    </Typography>\n                                </div>\n                                <div className = {classes.cardActions}>\n                                <IconButton size=\"small\"\n                                    onClick={()=> props.handleChangeTodoStatus(item.todoType,item.counterId)}\n                                >\n                                    {item.todoType === 'active' ? <CheckIcon color=\"primary\" data-for='handleChangeTodoStatus' data-tip='Complete'/> : <UndoIcon color=\"primary\" data-for='handleChangeTodoStatus' data-tip='Undo'/> }\n                                </IconButton>\n                                <IconButton size=\"small\" color=\"secondary\"\n                                    onClick={()=> props.handleRemoval(item.counterId)}\n                                >\n                                    <DeleteIcon data-for='handleChangeTodoStatus' data-tip='Delete'/>\n                                </IconButton>\n                                <ReactTooltip place=\"bottom\" id='handleChangeTodoStatus' getContent={(dataTip) => `${dataTip}`}/>\n                                </div>\n                                <div style = {{clear : \"both\"}}></div>\n                                <div className = {classes.whenTime}>\n                                    {item.txtWhenDiffFormat}\n                                </div>\n                     </div>\n                </Grid>\n            )\n        );\n    }\n    return <NoDataFound tabType={tabType} />;\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport NotificationBadge from 'react-notification-badge';\nimport {Effect} from 'react-notification-badge';\n\nimport ImgMediaCard from './ListCards';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root_left_side: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    height: '452px',\n    //backgroundColor: 'black',\n  },\n\n}));\n\nexport default function SimpleTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root_left_side}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"All\" {...a11yProps(0)} />\n          <Tab label=\"Done\" {...a11yProps(1)} />\n          <Tab label=\"Active\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <Scrollbars style={{ height: \"340px\" }}>\n       <div style={{maxHeight:\"200px\"}}> \n          <TabPanel value={value} index={0} className={classes.tabsPanel}>\n              <ImgMediaCard state = {props.state} tabType = {'all'} handler = {props.handler} handleRemoval = {props.handleRemoval} handleChangeTodoStatus = {props.handleChangeTodoStatus}/>\n          </TabPanel>\n          <TabPanel value={value} index={1} className={classes.tabsPanel}>\n              <ImgMediaCard state = {props.state} tabType = {'done'} handler = {props.handler} handleRemoval = {props.handleRemoval} handleChangeTodoStatus = {props.handleChangeTodoStatus}/>\n          </TabPanel>\n          <TabPanel value={value} index={2} className={classes.tabsPanel}>\n            <ImgMediaCard state = {props.state} tabType = {'active'} handler = {props.handler} handleRemoval = {props.handleRemoval} handleChangeTodoStatus = {props.handleChangeTodoStatus} />\n          </TabPanel>\n        </div>\n      </Scrollbars>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport DateAndTimePickers from './DateTimeInput';\nimport DateFnsUtils from '@date-io/date-fns';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport moment from 'moment';\nimport {\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nimport SimpleTabs from './Tabs';\n\n\nconst useStyles = makeStyles(theme => ({\n  todo_time_comp_con: {\n    // height: '480px',\n    // maxWidth: '800px',\n    // position: 'relative',\n    //margin: '0 auto',\n    //top: '61px !important',\n    // margin: '0px 0px 0px 16px'\n  },\n  root: {\n    // height: '480px',\n    // maxWidth: '800px',\n    // position: 'relative',\n    // margin: '60px auto 0 auto',\n    border: '1px solid blue',\n\n    boxShadow: '5px 10px #888888'\n  },\n  containerFirstChild: {\n    border: '1px solid blue',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  superContainer : {\n\n    margin: \"60px auto 0 auto\",\n    position: \"relative\",\n    maxWidth: \"800px\",\n    // backgroundColor : \"transparent\"\n  }\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  //const [txtWhen, setTxtWhenDateChange] = useState(null);\n  //const txtWhen = null;\n\n  const [state, setState] = useState({\n    txtWhereToDo: '',\n    txtWhatToDo: '',\n    drpdTodoType: '',\n    txtWhen: null,\n    allTodoData: [],\n    counterId: 0,\n    todoSearchFor: 'today'\n  })\n  const handleDateChange = date => {\n\n    var dateTime = moment(date).format(\"DD-MM-YYYY hh:mm a\");\n    //dd/MM/yyyy hh:mm a\n    setState({\n      ...state,\n      txtWhen: date,\n      txtWhenDiffFormat: dateTime\n    });\n    console.log(state);\n  };\n\n  function handleRemoval(nodeId) {\n\n    var data = state.allTodoData;\n    data = data.filter(function (el) {\n      return el.counterId !== nodeId;\n    });\n    setState({\n      ...state,\n      allTodoData: data\n    });\n    return;\n  }\n\n  function handleChange(event) {\n    setState({ ...state, [event.target.id]: event.target.value });\n  }\n\n  function handleChangeTodoStatus(todoType, nodeId) {\n\n    var data = state.allTodoData;\n    for (var i in data) {\n      if (data[i].counterId == nodeId) {\n        console.log(data[i].todoType, \"clicked\");\n        data[i].todoType = data[i].todoType == 'active' ? 'done' : 'active';\n        break;\n      }\n    }\n    console.log(data);\n    setState({\n      ...state,\n      allTodoData: data\n    });\n    return;\n  }\n\n  function addTodoData(event) {\n    event.preventDefault();\n\n    let counter = state.counterId + 1;\n    setState((state) => ({\n      ...state,\n      counterId: counter,\n      allTodoData: [...state.allTodoData,\n      {\n        counterId: counter,\n        txtWhereToDo: state.txtWhereToDo,\n        txtWhatToDo: state.txtWhatToDo,\n        drpdTodoType: state.drpdTodoType,\n        txtWhen: state.txtWhen,\n        txtWhenDiffFormat: state.txtWhenDiffFormat,\n        isActive: true,\n        todoType: 'active',\n        todoStatus: ''\n      },\n    ],\n    txtWhereToDo: '',\n      txtWhatToDo: '',\n      drpdTodoType: '',\n      txtWhen: null,\n    }));\n\n    console.log(state);\n    console.log(moment());\n  }\n  return (\n\n    //alignItems=\"center\"\n    <>\n      <Grid container className = {classes.superContainer}>\n        <Grid container component=\"main\" className={classes.todo_time_comp_con}\n          justify=\"flex-start\">\n          <Select\n            native\n            id=\"todoSearchFor\"\n            name=\"todoSearchFor\"\n            onChange={handleChange}\n            value={state.todoSearchFor}\n          >\n            <option value='today'>Today</option>\n            <option value='upcoming'>Upcoming</option>\n            <option value='previous'>Previous</option>\n          </Select>\n        </Grid>\n        <Grid container component=\"main\" className={classes.root}\n        justify=\"center\">\n        <CssBaseline />\n        {/* className={classes.image} */}\n        <Grid item xs={false} sm={12} md={12}></Grid>\n        <Grid item xs={false} sm={4} md={7}>\n          <SimpleTabs state={state} handler={setState} handleRemoval={handleRemoval} handleChangeTodoStatus={handleChangeTodoStatus} />\n        </Grid>\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <EventNoteIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              To Do\n            </Typography>\n            <form className={classes.form} onSubmit={addTodoData}>\n              <Grid container spacing={5}>\n\n                <FormControl required className={classes.formControl} fullWidth>\n                  <InputLabel htmlFor=\"drpdTodoType\">Type</InputLabel>\n                  <Select\n                    native\n                    id=\"drpdTodoType\"\n                    name=\"drpdTodoType\"\n                    onChange={handleChange}\n                    value={state.drpdTodoType}\n                  >\n                    <option value=\"\" />\n                    <option value='family'>Family</option>\n                    <option value='business'>Business</option>\n                    <option value='personal'>Personal</option>\n                    <option value='work'>Work</option>\n                  </Select>\n                </FormControl>\n\n                <TextField\n                  id=\"txtWhatToDo\"\n                  name=\"txtWhatToDo\"\n                  label=\"What i have to do?\"\n                  fullWidth\n                  onChange={handleChange}\n                  value={state.txtWhatToDo}\n                />\n                <TextField\n                  id=\"txtWhereToDo\"\n                  name=\"txtWhereToDo\"\n                  label=\"Where?\"\n                  fullWidth\n                  onChange={handleChange}\n                  value={state.txtWhereToDo}\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                  <DateTimePicker\n                    // disablePast\n                    label=\"When?\"\n                    clearable\n                    fullWidth\n                    name='txtWhen'\n                    id='txtWhen'\n                    value={state.txtWhen}\n                    onChange={handleDateChange}\n                    format=\"dd-MM-yyyy hh:mm a\"\n                  />\n                </MuiPickersUtilsProvider>\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Add Task\n                  </Button>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n      </Grid>\n    </>\n  );\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport SignInSide from './Components/SignInSide';\n\n\nclass AddTaskForm extends Component {\n  render() {\n    return (<div className=\"App\">\n      <form>\n        Type : <br /> \n         <select id='drpdTodoType' name='drpdTodoType'>\n             <option value='family'>Family</option>\n             <option value='business'>Business</option>\n             <option value='personal'>Personal</option>\n             <option value='work'>Work</option>\n         </select>\n         <br />\n        <input type=\"text\" name=\"txtWhatToDo\" placeholder= \"What i have to do?\" required/>\n        <br />\n        <input type=\"text\" name=\"txtWhereToDo\" placeholder= \"Where to do?\" required/>\n        <br /><br />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>);\n\n  }\n}\nclass AddTaskButton extends Component {\n\n  openTodoForm = () => {\n    const { handleShowForm } = this.props;\n    handleShowForm();\n\n  }\n\n  render() {\n    return (\n    /*<input\n      type='button'\n      defaultValue=\"Add Todo\"\n      onClick={this.openTodoForm}\n    />*/\n    <Button \n          variant=\"contained\" \n          color=\"primary\"\n          onClick={this.openTodoForm}\n          type='button'>\n      Add Todo\n    </Button>\n    );\n  }\n}\nclass ParentWrapper extends Component {\n\n  state = {\n    isShowed : false\n  }\n\n  handleShowForm = () => {\n    this.setState({\n      isShowed  :true\n    })\n  }\n\n  render() {\n    return (<div>\n      <AddTaskButton handleShowForm={this.handleShowForm} />\n      {\n        this.state.isShowed\n        &&\n      <AddTaskForm />\n      }\n    </div>);\n\n  }\n}\n\nexport default SignInSide;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icons8-family-100.0f2b1595.svg\";"],"sourceRoot":""}